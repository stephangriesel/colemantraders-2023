---
import Head from '../components/Head.astro';
import Nav from '../components/Nav.astro';
import Footer from '../components/Footer.astro';
import { SITE } from '../config';

let { title } = SITE;
let description = 'Fuel, container and plant services';
let permalink = 'https://www.colemantraders.co.za';
---

<html lang="en">
  <head>
    <Head {title} {description} {permalink} />
  </head>

  <body>
    <div class="ml-[auto] mr-[auto] w-full">
      <Nav />
    </div>
    <div
      class="grid ml-[auto] mr-[auto] w-full h-auto justify-between md:h-[45em] max-w-[65em] pl-[2rem] pr-[2rem] content-center"
    >
      <div class="grid grid-cols-1 md:grid-cols-2">
        <div class="m-5">
          <h2
            class="max-w-2xl mb-5 text-4xl font-extrabold tracking-tight leading-none md:text-5xl xl:text-6xl dark:text-white"
          >
            Container Services
          </h2>
          <p class="pt-10 pb-10">
            Coleman Traders (Pty) Ltd can assist you with the right solutions to
            fulfil your container needs. Our cost-effective rates is one of the
            many reasons why we flourish. We sell a wide variety of used
            containers. Due to our large transportation network, it enables us
            to deliver to all provinces at very attractive rates. We are able to
            load and offload on construction and mining sites thanks to our
            safety procedures and awareness. Our equipment, drivers and crane
            operators are certified at highly recommended testing facilities.
          </p>
          <div id="accordion-collapse" data-accordion="collapse">
            <h2 id="accordion-collapse-heading-1">
              <button
                type="button"
                class="flex items-center justify-between w-full p-5 font-medium text-left text-gray-500 border border-b-1 border-gray-200 rounded-t-xl focus:ring-4 focus:ring-gray-200 dark:focus:ring-gray-800 dark:border-gray-700 dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-800"
                data-accordion-target="#accordion-collapse-body-1"
                aria-expanded="false"
                aria-controls="accordion-collapse-body-1"
              >
                <span>More Specifications</span>
                <svg
                  data-accordion-icon
                  class="w-3 h-3 rotate-180 shrink-0"
                  aria-hidden="true"
                  xmlns="http://www.w3.org/2000/svg"
                  fill="none"
                  viewBox="0 0 10 6"
                >
                  <path
                    stroke="currentColor"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M9 5 5 1 1 5"></path>
                </svg>
              </button>
            </h2>
            <div
              id="accordion-collapse-body-1"
              class="hidden"
              aria-labelledby="accordion-collapse-heading-1"
            >
              <div
                class="p-5 border border-b-1 border-gray-200 dark:border-gray-700 dark:bg-gray-900"
              >
                <ul class="p-5">
                  <li>• Ablution Blocks</li>
                  <li>• 6m/12m Office blocks</li>
                  <li>• 6m/12m storage containers</li>
                  <li>• Transportation</li>
                </ul>
              </div>
            </div>
          </div>
        </div>
        <div class="grid content-center ml-2 mr-2">
          <img
            src="https://res.cloudinary.com/dvs29qmqx/image/upload/w_500,c_scale/v1698122189/services/container_uivkc1.jpg"
            alt="containers"
          />
        </div>
      </div>
    </div>
    <Footer />
    <style>
      .animation {
        opacity: 0;
        /* transform: translateX(-300px); */
        transition: all 0.7s ease-out;
        transition-delay: 0.4s;
      }

      .scroll-animation {
        opacity: 1;
        transform: translateX(0);
      }
    </style>
    <script>
      const the_animation = document.querySelectorAll('.animation');

      const observer = new IntersectionObserver(
        (entries) => {
          entries.forEach((entry) => {
            if (entry.isIntersecting) {
              entry.target.classList.add('scroll-animation');
            } else {
              entry.target.classList.remove('scroll-animation');
            }
          });
        },
        { threshold: 0.5 }
      );
      //
      for (let i = 0; i < the_animation.length; i++) {
        const elements = the_animation[i];

        observer.observe(elements);
      }
    </script>
  </body>
</html>
