---
import Head from '../components/Head.astro';
import Nav from '../components/Nav.astro';
import Footer from '../components/Footer.astro';
import { SITE } from '../config';

let { title } = SITE;
let description = 'Custom-made designs made simple';
let permalink = 'https://www.colemantraders.co.za';
---

<html lang="en">
  <head>
    <Head {title} {description} {permalink} />
  </head>

  <body>
    <div class="ml-[auto] mr-[auto] w-full">
      <Nav />
    </div>
    <div class="ml-[auto] mr-[auto] w-full max-w-[65em] pl-[2rem] pr-[2rem]">
      <div class="grid grid-cols-1 md:grid-cols-2">
        <div>
          <h2>Plant <span>Hire</span></h2>
          <p>
            With over 10 years of experience, Coleman Traders (Pty) Ltd can
            confidently offer innovative solutions for any construction and
            mining Plant Hire requirements. We work 24/7 365 days. With
            committed customer service and dedication to 100% reliability, we
            can assure our clients that we can make contracts and tenders look
            effortless. Maintenance teams are on standby to ensure maximum
            production. Other measures such as spare wheels and other wear &
            tear items can be held on site for timeously recoveries on
            breakdowns.
          </p>
          <div id="accordion-collapse" data-accordion="collapse">
            <h2 id="accordion-collapse-heading-1">
              <button
                type="button"
                class="flex items-center justify-between w-full p-5 font-medium text-left text-gray-500 border border-b-1 border-gray-200 rounded-t-xl focus:ring-4 focus:ring-gray-200 dark:focus:ring-gray-800 dark:border-gray-700 dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-800"
                data-accordion-target="#accordion-collapse-body-1"
                aria-expanded="false"
                aria-controls="accordion-collapse-body-1"
              >
                <span>More Specifications</span>
                <svg
                  data-accordion-icon
                  class="w-3 h-3 rotate-180 shrink-0"
                  aria-hidden="true"
                  xmlns="http://www.w3.org/2000/svg"
                  fill="none"
                  viewBox="0 0 10 6"
                >
                  <path
                    stroke="currentColor"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M9 5 5 1 1 5"></path>
                </svg>
              </button>
            </h2>
            <div
              id="accordion-collapse-body-1"
              class="hidden"
              aria-labelledby="accordion-collapse-heading-1"
            >
              <div
                class="p-5 border border-b-1 border-gray-200 dark:border-gray-700 dark:bg-gray-900"
              >
                <ul>
                  <li>• Yellow machinery</li>
                  <li>• Water trucks</li>
                  <li>• Tipper trucks</li>
                  <li>• Forklifts</li>
                  <li>• Generators</li>
                  <li>• Lowbed</li>
                  <li>• Transportation services</li>
                </ul>
              </div>
            </div>
          </div>
        </div>
        <div>
          <img
            src="https://res.cloudinary.com/dvs29qmqx/image/upload/w_500,c_scale/v1698122191/services/plant_e75hqr.jpg"
            alt="plant"
          />
        </div>
      </div>
    </div>
    <Footer />
    <style>
      .animation {
        opacity: 0;
        /* transform: translateX(-300px); */
        transition: all 0.7s ease-out;
        transition-delay: 0.4s;
      }

      .scroll-animation {
        opacity: 1;
        transform: translateX(0);
      }
    </style>
    <script>
      const the_animation = document.querySelectorAll('.animation');

      const observer = new IntersectionObserver(
        (entries) => {
          entries.forEach((entry) => {
            if (entry.isIntersecting) {
              entry.target.classList.add('scroll-animation');
            } else {
              entry.target.classList.remove('scroll-animation');
            }
          });
        },
        { threshold: 0.5 }
      );
      //
      for (let i = 0; i < the_animation.length; i++) {
        const elements = the_animation[i];

        observer.observe(elements);
      }
    </script>
  </body>
</html>
